quark Bond
{
  typedef Int(3) Direction;
  Direction xBonds[] = {0, 0, 0, 0};
  Direction yBonds[] = {0, 0, 0, 0};
  Bool bonded = false;
  Unsigned(3) myState = 0;


  Unsigned(3) getFreeBondIndex()
  {
    for(Unsigned(3) i =0; i<4; i++)
    {
      if(xBonds[i] == 0 && yBonds[i] == 0)
      {
        return i;
      }
    }
    return (Unsigned(3)) 4;
  }

  Bool alreadyBonded(Direction x, Direction y)
  {
    for(Unsigned(3) i =0; i<4; i++)
    {
      if(xBonds[i] == x && yBonds[i] == y)
      {
        return true;
      }
    }
    return false;
  }

  Void clearRemainingBonds(Unsigned startIndex)
  {
    if(startIndex < (Unsigned) 4)
    {
      for(Unsigned i= startIndex; i < (Unsigned)4; i++)
      {
        xBonds[i] = 0;
        yBonds[i] = 0;
      }
    }
  }

  ARGB getColor(Unsigned selector)
  {
    ColorUtils cu;
    if (myState == 0 && bonded) return cu.color(0x9,0xff,0x9);
    else if(myState == 1) return cu.color(0x0, 0x0, 0xff);
    else if(myState == 2) return cu.color(0xff, 0x0, 0x0);
    else if(myState >= 3) return cu.color(0x0, 0xff, 0xff);
    //else if(myState == 4) return cu.color(0xff, 0x0, 0xff);
    else return cu.color(0xff,0x0,0xff);
  }

}


element Electron
{
  typedef Unsigned(3) Type;
  typedef Unsigned(6) Sn;
  Type molTypes[4];
  Type molDirs[4];
  Unsigned(2) geneIndex = 0;
  Unsigned(2) geneNum;
  Unsigned(12) moleculeNum1;
  Unsigned(12) moleculeNum2;
  Unsigned(12) polymerNum = 0;
  Unsigned(6) polymerCount = 0;
  Bool canReproduce = true;
  //Bool amLeader = false;


  Void behave()
  {
     EventWindow ew;
     //moveMolecule(ew);
     broadcastPolymerCount(ew);
     canReplicate(ew);
  }

  Void setPolymerNum()
  {
    Random rand;
    if(polymerNum == 0)
    {
      polymerNum = (Unsigned(12))rand.between(1, 4000);
    }
  }

  Void broadcastPolymerCount(EventWindow ew)
  {
    for(Unsigned(6) i =0; i<41; i++)
    {
      if(ew[i] is Electron)
      {
        Electron e = (Electron) ew[i];
        if(e.polymerNum == polymerNum)
        {
          if(e.polymerCount < polymerCount)
          {
            if(e.polymerCount == 4 || e.polymerCount == 5)
            {
              polymerCount += e.polymerCount;
            }

            e.polymerCount = polymerCount;
            ew[i] = e;
          }
        }
      }
    }
    for(Unsigned(6) j = 0; j<41; j++)
    {
      if(ew[j] is Proton)
      {
        Proton p = (Proton) ew[j];
        if(p.polymerNum == polymerNum)
        {
          p.polymerCount = (Unsigned(6))polymerCount;
          ew[j] = p;
        }
      }
    }
  }

  Unsigned(2) getGeneNum(EventWindow ew, Unsigned(3) type)
  {
    Unsigned(2) retVal = 0;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Electron)
      {
        Electron e = (Electron) ew[i];
        if(e.polymerNum == polymerNum)
        {
          if(e.geneNum == 1)
          {
            molTypes[0] = e.molTypes[0];
            molTypes[1] = e.molTypes[1];
            e.molTypes[2] = type;
            molTypes[2] = type;

          }
          else if(e.geneNum == 2)
          {
            molTypes[0] = e.molTypes[0];
            molTypes[1] = e.molTypes[1];
            molTypes[2] = e.molTypes[2];
            e.molTypes[3] = type;
            molTypes[3] = type;
          }
          else if(e.geneNum == 3)
          {
            return 3;
          }
          e.geneNum++;
          geneNum = e.geneNum;
          ew[i] = e;
          retVal = geneNum;
          return retVal;
        }
      }
    }
    return retVal;
  }

  Void setInitialPolymerCount(Unsigned(12) count)
  {
    polymerCount = (Unsigned(6)) count;
  }

  Void canReplicate(EventWindow ew)
  {
    Sn count =0;
    for(Sn i=0; i<4; i++)
    {
      if(molTypes[i] > 0) count++;
    }
    if(count == 4 && canReproduce)
    {
      Neutron n;
      for(Sn j=0; j<4; j++)
      {
        n.molTypes[j] = molTypes[j];
      }
      n.polymerNum = polymerNum;
      for(Sn k= 40; k> 0; k--)
      {
        if(ew[k] is Empty)
        {
          ew[k] = n;
          break;
        }
      }
      canReproduce = false;
    }
  }
}

element Proton : Bond
{
  Unsigned(3) bondNum1 = 7;
  Unsigned(12) moleculeNum = 0;
  Unsigned(3) moleculeCount=0;

  Unsigned(3) moleculeDir = 5;
  Bool partOfChain = false;
  Unsigned(12) polymerNum = 0;
  Unsigned(6) polymerCount = 0;

  Bool canAddToPolymer = true;


  Void behave()
  {
    EventWindow ew;
    Random rand;
    Bool bondedThisStep = false;
    getMoleculeNumber(rand);
    getMoleculeCount(ew, rand);
    if(myState == 0)
    {
      if(bonded)
      {
        checkBonds(ew);
      }
      setBonds(ew);
      getMoleculeCount(ew, rand);
      if(!bonded)
      {
        Unsigned(6) move = (Unsigned(6))rand.between(1,4);
        Unsigned(6) randMove = (Unsigned(6))rand.between(1,40);
        if(ew[move] is Empty)
        {

          Int replicate = rand.between(0, 100);
          if(replicate < 8)
          {
            if(ew[randMove] is Empty)
            {
              Proton p;
              ew[randMove] = p;
            }

          }
          else
          {
            ew.swap(0,move);
          }
        }
      }
      else
      {
        isCarbon(ew);
        isOxygen(ew);
        isNitrogen(ew);
        updateAllBondNums(ew);
        //isHydrogen(ew);
        moveMolecule(ew, rand);
      }
    }
    else if(myState == 1)
    {
      checkBonds(ew);
      getMoleculeCount(ew, rand);
      if(checkMoleculeStatus(ew))
      {
        getPolymerCount(ew);
        if(canAddToPolymer)
        {
          carbonMakePolymer(ew);
        }
        else
        {
          broadcastFullMolecule(ew);
        }
        if(!partOfChain)
        {
          moveMolecule(ew, rand);
        }
      }
      else
      {
        return;
      }
    }
    else if(myState == 2)
    {
      checkBonds(ew);
      getMoleculeCount(ew, rand);
      if(checkMoleculeStatus(ew))
      {
        getPolymerCount(ew);
        if(canAddToPolymer)
        {
          makeOxygenPolymer(ew);
        }
        else
        {
          broadcastFullMolecule(ew);
        }
        if(!partOfChain)
        {
          moveMolecule(ew, rand);
        }
      }
      else
      {
        return;
      }

    }
    else if(myState >= 3)
    {
      if(polymerNum == 0) checkNitrogenStatus(ew);
      checkBonds(ew);
      getPolymerCount(ew);
      getMoleculeCount(ew, rand);
      if(checkMoleculeStatus(ew))
      {
        updateAllBondNums(ew);
        if(canAddToPolymer)
        {
          makeNitrogenPolymer(ew);
        }
        else
        {
          broadcastFullMolecule(ew);
        }

        if(!partOfChain)
        {
          moveMolecule(ew, rand);
        }
      }
      else
      {
        return;
      }
    }
  }

  Void broadcastFullMolecule(EventWindow ew)
  {
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.polymerNum == polymerNum)
        {
          p.canAddToPolymer = false;
          ew[i] = p;
        }
      }
    }
  }
  Void checkNitrogenStatus(EventWindow ew)
  {
    if(polymerNum == 0)
    {
      for(Unsigned(6) i =1; i<41; i++)
      {
        if(ew[i] is Proton)
        {
          Proton p = (Proton) ew[i];
          if(p.moleculeNum == moleculeNum)
          {
            if(p.polymerNum != 0)
            {
              polymerNum = p.polymerNum;
              partOfChain = true;
              return;
            }
          }
        }
      }
    }
  }

  Void updateAllBondNums(EventWindow ew)
  {
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          p.bondNum1 = p.getFreeBondIndex();
          ew[i] = p;
        }
      }
    }
  }

  Bool checkMoleculeStatus(EventWindow ew)
  {
    Unsigned(6) molCountIfWhole;
    Unsigned(6) index =0;
    Bool molStillInTact;
    if(myState == 1)
    {
      molCountIfWhole = 5;
    }
    else
    {
      molCountIfWhole = 4;
    }
    if(moleculeCount == molCountIfWhole)
    {
      return true;
    }
    else
    {
      for(Unsigned(6) i = 1; i<41; i++)
      {
        if(ew[i] is Proton)
        {
          Proton p = (Proton) ew[i];
          if(p.moleculeNum == moleculeNum)
          {
            ew[i] = Empty.instanceof;
          }
        }
      }
      ew[0] = Empty.instanceof;
    }
    return false;

  }

  Void getPolymerCount(EventWindow ew)
  {
    Unsigned(6) counter =0;
    Unsigned(6) buffer[41];
    Unsigned(6) moleculeIndex =0;
    for(Unsigned(6) i =0; i<41; i++)
    {
      buffer[i] = 60;
    }
    for(Unsigned(6) j =0; j<41; j++)
    {
      if(ew[j] is Proton)
      {
        Proton p = (Proton) ew[j];
        if(p.polymerNum == polymerNum)
        {
          buffer[moleculeIndex] = j;
          counter++;
        }
      }
    }
    for(Unsigned(6) k=0; k<41; k++)
    {
      if(buffer[k] != 60)
      {
        if(ew[buffer[k]] is Proton)
        {
          Proton countProton = (Proton) ew[buffer[k]];
          countProton.polymerCount = counter;
          ew[buffer[k]] = countProton;
        }
      }
    }
  }

  Void getMoleculeCount(EventWindow ew, Random rand)
  {
    Unsigned(3) count =0;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton o = (Proton) ew[i];
        if(moleculeNum == o.moleculeNum)
        {
          count++;
        }
      }
    }
    moleculeCount = count;
    return;
  }

  Void getMoleculeNumber(Random rand)
  {
    if(moleculeNum == 0)
    {
      moleculeNum = (Unsigned(12))rand.between(1, 4000);
    }
  }

  Void setBonds(EventWindow ew)
  {
    if(myState > 0)
    {
      return;
    }
    for(Unsigned(6) d = 1; d <=4; d++)
    {
      bondNum1 = getFreeBondIndex();

      if(ew[d] is Proton )
      {
        Proton c = (Proton) ew[d];
        Unsigned(3) bondNum2 = c.getFreeBondIndex();
        C2D coord = ew.getCoord(d);
        Direction xDir = (Direction) coord.x;
        Direction yDir = (Direction) coord.y;
        Bool check = alreadyBonded(xDir, yDir);
        Direction negXDir = (Direction) (-1*xDir);
        Direction negYDir = (Direction) (-1*yDir);
        Bool otherCheck = c.alreadyBonded(negXDir, negYDir);
        if((bondNum1 < 4) && (bondNum2 < 4) && (!(check)) && (!(otherCheck)) && (myState ==0) && (c.myState == 0))
        {

          xBonds[bondNum1] = xDir;
          yBonds[bondNum1] = yDir;
          if(d == 1)
          {
            c.xBonds[bondNum2] = (Direction) 1;
            c.yBonds[bondNum2] = (Direction) 0;
          }
          else if (d == 2)
          {
            c.xBonds[bondNum2] = (Direction) 0;
            c.yBonds[bondNum2] = (Direction) 1;
          }
          else if (d == 3)
          {
            c.xBonds[bondNum2] = (Direction) 0;
            c.yBonds[bondNum2] = (Direction) -1;
          }
          else
          {
            c.xBonds[bondNum2] = (Direction) -1;
            c.yBonds[bondNum2] = (Direction) 0;
          }
          bonded = true;
          //bondedThisStep = true;
          c.bonded = true;
          if(moleculeCount >= c.moleculeCount || c.moleculeNum == 0)
          {
            c.moleculeNum = moleculeNum;
          }
          else
          {
            moleculeNum = c.moleculeNum;
          }
          ew[d] = c;
          c.getColor(0);
        }
      }
    }
  }



  Void moveMolecule(EventWindow ew, Random rand)
  {
    Int(5) xMove = -2;
    Int(5) yMove = -2;
    Unsigned(6) moveDir = (Unsigned(6)) rand.between(1,4);
    if(moveDir == 1)
    {
      xMove =-1;
      yMove = 0;
    }
    else if(moveDir == 2)
    {
      xMove =0;
      yMove = -1;
    }
    else if(moveDir == 3)
    {
      xMove =0;
      yMove = 1;
    }
    else if(moveDir == 4)
    {
      xMove = 1;
      yMove =0;
    }
    else
    {
      return;
    }
    Unsigned(6) neighbors [41];

    for(Unsigned(6) k=0; k<41; k++)
    {
      neighbors[k] = 60;
    }
    Unsigned(6) moleculeIndex =0;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton o = (Proton) ew[i];
        if(moleculeNum == o.moleculeNum)
        {
          neighbors[moleculeIndex] = i;
          C2D coord = ew.getCoord(i);
          coord.x += xMove;
          coord.y += yMove;
          Unsigned(6) siteNum = ew.getSiteNumber(coord);
          if(ew[siteNum] is Proton)
          {
            Proton pCheck = (Proton) ew[siteNum];
            if((pCheck.myState > 0) && (pCheck.moleculeNum != moleculeNum))
            {
              return;
            }
          }
          else if(ew[siteNum] is Electron)
          {
            return;
          }
          else if(ew[siteNum] is Neutron) return;
          if(!(ew.isLegal(coord)) || !(ew.isLive(coord)))
          {
            return;
          }
          moleculeIndex++;
        }
      }

    }
    if(moveDir == 4)
    {
      Int(16) xCoords = 3;
      while(xCoords > -5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.x == xCoords)
            {
              coord.x += 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        xCoords--;
      }
    }
    else if(moveDir == 3)
    {
      Int(16) yCoords = 3;
      while(yCoords > -5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.y == yCoords)
            {
              coord.y += 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        yCoords--;
      }
    }
    else if(moveDir == 2)
    {
      Int(16) yCoords = -3;
      while(yCoords < 5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.y == yCoords)
            {
              coord.y -= 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        yCoords++;
      }
    }
    else if(moveDir == 1)
    {
      Int(16) xCoords = -3;
      while(xCoords < 5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.x == xCoords)
            {
              coord.x -= 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        xCoords++;
      }
    }

  }

  Void makeNitrogenPolymer(EventWindow ew)
  {
    Unsigned(6) bondSN = 60;
    Unsigned(6) emptySN = 60;
    Proton checkProton;
    Proton bondProton;
    Bool bondVertical;
    if(myState >= 3)
    {
      if(bondNum1 == 1)
      {
         if(moleculeDir == 4)
         {
           if(yBonds[0] == 1)
           {
             if(ew[8] is Proton)
             {
               checkProton = (Proton) ew[8];
               if(checkProton.moleculeNum == moleculeNum)
               {
                 if(ew[2] is Empty && ew[10] is Proton)
                 {
                   bondProton = (Proton) ew[10];
                   if(bondProton.myState > 0)
                   {
                     bondSN = 10;
                     emptySN = 2;
                   }
                 }
                 else if(ew[1] is Empty && ew[9] is Proton)
                 {
                   bondProton = (Proton) ew[9];
                   if(bondProton.myState >0)
                   {
                     bondSN = 9;
                     emptySN = 1;
                   }
                 }
               }
             }
             else if(ew[6] is Proton)
             {
               checkProton = (Proton) ew[6];
               if(checkProton.moleculeNum == moleculeNum)
               {
                 if(ew[2] is Empty && ew[10] is Proton)
                 {
                   bondProton = (Proton) ew[10];
                   if(bondProton.myState > 0)
                   {
                     bondSN = 10;
                     emptySN = 2;

                   }
                 }
                 else if(ew[4] is Empty && ew[12] is Proton)
                 {
                   bondProton = (Proton) ew[12];
                   if(bondProton.myState >0)
                   {
                     bondSN = 12;
                     emptySN = 4;

                   }
                 }
               }
             }
           }
           else if(yBonds[0] == -1)
           {
             if(ew[7] is Proton)
             {
               checkProton = (Proton) ew[7];
               if(checkProton.moleculeNum == moleculeNum)
               {
                 if(ew[3] is Empty && ew[11] is Proton)
                 {
                   bondProton = (Proton) ew[11];
                   if(bondProton.myState > 0)
                   {
                     bondSN = 11;
                     emptySN = 3;

                   }
                 }
                 else if(ew[1] is Empty && ew[9] is Proton)
                 {
                   bondProton = (Proton) ew[9];
                   if(bondProton.myState >0)
                   {
                     bondSN = 9;
                     emptySN = 1;

                   }
                 }
               }
             }
             else if(ew[5] is Proton)
             {
               checkProton = (Proton) ew[5];
               if(checkProton.moleculeNum == moleculeNum)
               {
                 if(ew[3] is Empty && ew[11] is Proton)
                 {
                   bondProton = (Proton) ew[11];
                   if(bondProton.myState > 0)
                   {
                     bondSN = 11;
                     emptySN = 3;

                   }
                 }
                 else if(ew[4] is Empty && ew[12] is Proton)
                 {
                   bondProton = (Proton) ew[12];
                   if(bondProton.myState >0)
                   {
                     bondSN = 12;
                     emptySN = 4;
                   }
                 }
               }
             }
           }
         }
         else if(moleculeDir == 1)
         {
           if(ew[19] is Proton)
           {
             checkProton = (Proton) ew[19];
             if(checkProton.moleculeNum == moleculeNum)
             {
               if(ew[3] is Empty && ew[11] is Proton)
               {
                 bondProton = (Proton) ew[11];
                 if(bondProton.myState > 0)
                 {
                   bondSN = 11;
                   emptySN = 3;
                 }
               }
               else if(ew[1] is Empty && ew[9] is Proton)
               {
                 bondProton = (Proton) ew[9];
                 if(bondProton.myState >0)
                 {
                   bondSN = 9;
                   emptySN = 1;
                 }
               }
             }
           }
           else if(ew[20] is Proton)
           {
             checkProton = (Proton) ew[20];
             if(checkProton.moleculeNum == moleculeNum)
             {
               if(ew[2] is Empty && ew[10] is Proton)
               {
                 bondProton = (Proton) ew[10];
                 if(bondProton.myState > 0)
                 {
                   bondSN = 10;
                   emptySN = 2;
                 }
               }
               else if(ew[1] is Empty && ew[9] is Proton)
               {
                 bondProton = (Proton) ew[9];
                 if(bondProton.myState >0)
                 {
                   bondSN = 9;
                   emptySN = 1;
                 }
               }
             }
           }
         }
         else if(moleculeDir == 3)
         {
           if(ew[13] is Proton)
           {
             checkProton = (Proton) ew[13];
             if(checkProton.moleculeNum == moleculeNum)
             {
               if(ew[3] is Empty && ew[11] is Proton)
               {
                 bondProton = (Proton) ew[11];
                 if(bondProton.myState > 0)
                 {
                   bondSN = 11;
                   emptySN = 3;
                 }
               }
               else if(ew[4] is Empty && ew[12] is Proton)
               {
                 bondProton = (Proton) ew[12];
                 if(bondProton.myState >0)
                 {
                   bondSN = 12;
                   emptySN = 4;
                 }
               }
             }
           }
           else if(ew[14] is Proton)
           {
             checkProton = (Proton) ew[14];
             if(checkProton.moleculeNum == moleculeNum)
             {
               if(ew[2] is Empty && ew[10] is Proton)
               {
                 bondProton = (Proton) ew[10];
                 if(bondProton.myState > 0)
                 {
                   bondSN = 10;
                   emptySN = 2;
                 }
               }
               else if(ew[4] is Empty && ew[12] is Proton)
               {
                 bondProton = (Proton) ew[12];
                 if(bondProton.myState >0)
                 {
                   bondSN = 12;
                   emptySN = 4;
                 }
               }
             }
           }
         }
         if(bondSN != 60 && emptySN != 60)
         {
           if(bondProton.myState > 0)
           {
             if(bondProton.myState >= 3 && (bondProton.moleculeDir ==1 || bondProton.moleculeDir == 4) && (bondProton.bondNum1 == 1) && bondProton.canAddToPolymer)
             {
               Electron e;
               Unsigned(6) myMolCount = 4;
               Unsigned(6) bondMolCount;
               Unsigned(3) neighborType = bondProton.myState;

               if(emptySN == 2 || emptySN == 3)
               {
                 bondVertical = false;
               }
               else
               {
                 bondVertical = true;
               }
               if(!(canPlaceElectron(ew, emptySN,bondVertical))) return;
               if(bondProton.myState == 1)
               {
                 bondMolCount = 5;
               }
               else
               {
                 bondMolCount = 4;
               }
               if(bondProton.polymerNum == 0 && polymerNum == 0)
               {
                 e.setPolymerNum();
                 e.molTypes[0] = myState;
                 e.molTypes[1] = neighborType;
                 e.geneNum = 1;
                 //e.amLeader = true;
                 e.polymerCount= (Unsigned(6)) (myMolCount+bondMolCount);
                 polymerNum = e.polymerNum;
                 bondProton.polymerNum = e.polymerNum;

               }
               else if(polymerNum > 0 && bondProton.polymerNum == 0)
               {
                 e.polymerNum = polymerNum;
                 Unsigned(2) num = e.getGeneNum(ew, bondProton.myState);
                 if(num == 3)
                 {
                   canAddToPolymer = false;
                   broadcastFullMolecule(ew);
                 }
                 bondProton.polymerNum = polymerNum;
                 e.polymerCount += bondMolCount;
               }
               else if(bondProton.polymerNum >0 && polymerNum == 0)
               {
                 e.polymerNum = bondProton.polymerNum;
                 Unsigned(2) num = e.getGeneNum(ew, myState);
                 if(num == 3)
                 {
                   canAddToPolymer = false;
                   broadcastFullMolecule(ew);
                 }
                 polymerNum = bondProton.polymerNum;
                 e.polymerCount+=myMolCount;
               }
               else
               {
                  if(polymerCount > bondProton.polymerCount)
                  {
                    bondProton.polymerNum = polymerNum;
                    e.polymerNum = polymerNum;
                  }
                  else
                  {
                    polymerNum = bondProton.polymerNum;
                    e.polymerNum = bondProton.polymerNum;
                  }
                  e.polymerCount = (Unsigned(6)) (polymerCount+bondProton.polymerCount);
               }
               updatePolymerNum(ew);
               bondProton.updatePolymerNum(ew);
               bondProton.partOfChain = true;
               partOfChain = true;
               bondProton.setPartOfChain(ew);
               setPartOfChain(ew);
               e.moleculeNum1 = moleculeNum;
               e.moleculeNum2 = bondProton.moleculeNum;
               ew[bondSN] = bondProton;
               ew[emptySN] = e;
             }


           }
         }

        }
      }
    }

    Bool canPlaceElectron(EventWindow ew, Unsigned(6) electronNum, Bool vertical)
    {
      Unsigned(6) checkPos;
      Unsigned(6) checkNeg;
      C2D coordPos = ew.getCoord(electronNum);
      C2D coordNeg = ew.getCoord(electronNum);
      if(vertical)
      {
        coordPos.y+=1;
        coordNeg.y-=1;
      }
      else
      {
        coordPos.x+=1;
        coordNeg.x-=1;
      }
      checkPos = ew.getSiteNumber(coordPos);
      checkNeg = ew.getSiteNumber(coordNeg);
      if(ew[checkPos] is Empty && ew[checkNeg] is Empty) return true;
      else return false;
    }


  Void carbonMakePolymer(EventWindow ew)
  {
    Unsigned(6) checkSN;
    Unsigned(6) emptySN;
    Unsigned(3) oppositeDir;
    Bool bondVertical;
    if(myState == 1)
    {
      if(moleculeDir == 1)
      {
        checkSN = (Unsigned(6)) 9;
        emptySN = (Unsigned(6)) 1;
        oppositeDir = (Unsigned(3)) 4;
      }
      else if(moleculeDir == 2)
      {
        checkSN = (Unsigned(6)) 10;
        emptySN = (Unsigned(6)) 2;
        oppositeDir = (Unsigned(3)) 3;
      }
      else if(moleculeDir == 3)
      {
        checkSN = (Unsigned(6)) 11;
        emptySN = (Unsigned(6)) 3;
        oppositeDir = (Unsigned(3)) 2;
      }
      else if(moleculeDir == 4)
      {
        checkSN = (Unsigned(6)) 12;
        emptySN = (Unsigned(6)) 4;
        oppositeDir = (Unsigned(3)) 1;
      }
      else
      {
        return;
      }

      if(ew[emptySN] is Empty)
      {
        if(ew[checkSN] is Proton)
        {
          Proton p = (Proton) ew[checkSN];
          if((p.myState == 1 && p.moleculeDir == oppositeDir) || p.myState == 2 || p.myState >= 3 )
          {
            if(!p.canAddToPolymer) return;
            if(emptySN == 1 || emptySN == 4)
            {
              bondVertical = true;
            }
            else if(emptySN == 2 || emptySN == 3)
            {
              bondVertical = false;
            }
            if(!(canPlaceElectron(ew, emptySN, bondVertical))) return;
            Electron e;
            Unsigned(6) pMolCount;
            Unsigned(6) myMolCount;
            if(p.polymerNum == 0 && polymerNum == 0)
            {
              e.setPolymerNum();
              //e.amLeader = true;
              if(myState == 1)
              {
                myMolCount = 5;
              }
              else if(myState > 1)
              {
                myMolCount = 4;
              }
              if(p.myState == 1)
              {
                pMolCount = 5;
              }
              else if(p.myState > 1)
              {
                pMolCount = 4;
              }
              polymerNum = e.polymerNum;
              e.molTypes[0] = myState;
              e.molTypes[1] = p.myState;
              e.geneNum = 1;
              p.polymerNum = e.polymerNum;
              e.polymerCount = (Unsigned(6)) (myMolCount + pMolCount);
            }
            else if(polymerNum != 0 && p.polymerNum == 0)
            {
              e.polymerNum = polymerNum;
              p.polymerNum = polymerNum;
              if(p.myState == 1)
              {
                pMolCount = 5;
              }
              else if(p.myState > 1)
              {
                pMolCount = 4;
              }
              Unsigned(2) checkNum = e.getGeneNum(ew, p.myState);
              if(checkNum == 3)
              {
                canAddToPolymer = false;
                broadcastFullMolecule(ew);
              }
              e.polymerCount = pMolCount;
            }
            else if(polymerNum == 0 && p.polymerNum != 0)
            {
              e.polymerNum = p.polymerNum;
              polymerNum = p.polymerNum;
              if(myState == 1)
              {
                pMolCount = 5;
              }
              else if(myState > 1)
              {
                pMolCount = 4;
              }
              Unsigned(2) checkNum = e.getGeneNum(ew, myState);
              if(checkNum == 3)
              {
                canAddToPolymer = false;
                broadcastFullMolecule(ew);
              }
              e.polymerCount = pMolCount;
            }
            else
            {
              if(polymerCount >= p.polymerCount)
              {
                e.polymerNum = polymerNum;
                p.polymerNum = polymerNum;
              }
              else
              {
                e.polymerNum = p.polymerNum;
                polymerNum = p.polymerNum;
              }
              e.polymerCount = (Unsigned(6)) (polymerCount+p.polymerCount);

            }
            updatePolymerNum(ew);
            p.updatePolymerNum(ew);
            p.partOfChain = true;
            partOfChain = true;
            p.setPartOfChain(ew);
            setPartOfChain(ew);
            e.moleculeNum1 = moleculeNum;
            e.moleculeNum2 = p.moleculeNum;
            ew[checkSN] = p;
            ew[emptySN] = e;
          }
        }
      }
    }
  }

  Void makeOxygenPolymer(EventWindow ew)
  {
    Unsigned(6) yCheckSN;
    Unsigned(6) xCheckSN;
    Unsigned(6) yEmptySN;
    Unsigned(6) xEmptySN;
    Unsigned(6) useCheck=0;
    Unsigned(6) useEmpty=0;
    Unsigned(3) oppositeDir;
    Bool bondVertical;

    if(moleculeDir == 1)
    {
      yEmptySN = 2;
      xEmptySN = 1;
      yCheckSN = 10;
      xCheckSN = 9;
    }
    else if(moleculeDir == 2)
    {
      yEmptySN = 2;
      xEmptySN = 4;
      yCheckSN = 10;
      xCheckSN = 12;
    }
    else if(moleculeDir == 3)
    {
      yEmptySN = 3;
      xEmptySN = 1;
      yCheckSN = 11;
      xCheckSN = 9;
    }
    else if(moleculeDir == 4)
    {
      yEmptySN = 3;
      xEmptySN = 4;
      yCheckSN = 11;
      xCheckSN = 12;
    }
    else
    {
      return;
    }
    if(ew[xEmptySN] is Empty)
    {
      useEmpty = xEmptySN;
      useCheck = xCheckSN;
      bondVertical = true;

    }
    else if(ew[yEmptySN] is Empty)
    {
      useEmpty = yEmptySN;
      useCheck = yCheckSN;
      bondVertical = false;
    }
    C2D coord = ew.getCoord(useEmpty);
    C2D coordChecker = ew.getCoord(useEmpty);
    coordChecker.x+=1;
    Unsigned(6) xPlus = ew.getSiteNumber(coordChecker);
    if(ew[xPlus] is Electron) return;
    coordChecker.x = coord.x;
    coordChecker.x+=(-1);
    Unsigned(6) xMinus = ew.getSiteNumber(coordChecker);
    if(ew[xMinus] is Electron) return;
    coordChecker.x = coord.x;
    coordChecker.y+=1;
    Unsigned(6) yPlus = ew.getSiteNumber(coordChecker);
    if(ew[yPlus] is Electron) return;
    coordChecker.y = coord.y;
    coordChecker.y+=(-1);
    Unsigned(6) yMinus = ew.getSiteNumber(coordChecker);
    if(ew[yMinus] is Electron) return;
    if(useEmpty != 0)
    {
      if(ew[useCheck] is Proton)
      {
        Proton p = (Proton) ew[useCheck];
        if(p.myState == 1 || p.myState == 2 || p.myState >= 3)
        {
          if(!p.canAddToPolymer) return;
          if(!(canPlaceElectron(ew, useEmpty, bondVertical))) return;
          Electron e;
          Unsigned(6) pMolCount;
          Unsigned(6) myMolCount;
          if(p.polymerNum == 0 && polymerNum == 0)
          {
            e.setPolymerNum();
            //e.amLeader = true;
            polymerNum = e.polymerNum;
            p.polymerNum = e.polymerNum;

            if(myState == 1)
            {
              myMolCount = 5;
            }
            else if(myState > 1)
            {
              myMolCount = 4;
            }
            if(p.myState == 1)
            {
              pMolCount = 5;
            }
            else if(p.myState > 1)
            {
              pMolCount = 4;
            }
            e.molTypes[0] = myState;
            e.molTypes[1] = p.myState;
            e.geneNum = 1;
            e.polymerCount = (Unsigned(6)) (myMolCount + pMolCount);
          }
          else if(polymerNum != 0 && p.polymerNum == 0)
          {
            e.polymerNum = polymerNum;
            p.polymerNum = polymerNum;
            if(p.myState == 1)
            {
              pMolCount = 5;
            }
            else if(p.myState > 1)
            {
              pMolCount = 4;
            }
            e.polymerCount = pMolCount;
            Unsigned(2) checkNum = e.getGeneNum(ew, p.myState);
            if(checkNum == 3)
            {
              canAddToPolymer = false;
              broadcastFullMolecule(ew);
            }
          }
          else if(polymerNum == 0 && p.polymerNum != 0)
          {
            e.polymerNum = p.polymerNum;
            polymerNum = p.polymerNum;
            if(myState == 1)
            {
              pMolCount = 5;
            }
            else if(myState > 1)
            {
              pMolCount = 4;
            }
            e.polymerCount = pMolCount;
            Unsigned(2) checkNum = e.getGeneNum(ew, myState);
            if(checkNum == 3)
            {
              canAddToPolymer = false;
              broadcastFullMolecule(ew);
            }
          }
          else
          {
            if(polymerCount >= p.polymerCount)
            {
              e.polymerNum = polymerNum;
              p.polymerNum = polymerNum;
            }
            else
            {
              e.polymerNum = p.polymerNum;
              polymerNum = p.polymerNum;
            }
            e.polymerCount = ((Unsigned(6))(polymerCount+p.polymerCount));
          }
          updatePolymerNum(ew);
          p.updatePolymerNum(ew);
          p.partOfChain = true;
          partOfChain = true;
          p.setPartOfChain(ew);
          setPartOfChain(ew);
          e.moleculeNum1 = moleculeNum;
          e.moleculeNum2 = p.moleculeNum;
          ew[useCheck] = p;
          ew[useEmpty] = e;
        }
      }
    }
  }

  Void setPartOfChain(EventWindow ew)
  {
    for(Unsigned(6) i =0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          p.partOfChain = true;
          ew[i] = p;
        }
      }
    }
  }

  Void updatePolymerNum(EventWindow ew)
  {
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          p.polymerNum = polymerNum;
          ew[i] = p;
        }
      }
    }
  }

  Void checkBonds(EventWindow ew)
  {
    for(Unsigned(6) i=0; i<4; i++)
    {
      if(xBonds[i] != 0 || yBonds[i] != 0)
      {
        C2D coord = ew.getCoord(0);
        coord.x = xBonds[i];
        coord.y = yBonds[i];
        Unsigned(6) sn = ew.getSiteNumber(coord);
        if(ew[sn] is Proton)
        {
          Proton o = (Proton) ew[sn];
          Bool foundBond = false;
          for(Unsigned(6) j=0; j<4; j++)
          {
            Int(16) x = (o.xBonds[j])*(-1);
            Int(16) y = (o.yBonds[j])*(-1);
            if(xBonds[i] == x && yBonds[i] == y)
            {
              foundBond = true;
              if(o.moleculeNum != moleculeNum)
              {
                if(moleculeCount >= o.moleculeCount)
                {
                  o.moleculeNum = moleculeNum;
                  moleculeCount++;
                  o.moleculeCount = moleculeCount;
                  ew[sn] = o;
                }
                else
                {
                  moleculeNum = o.moleculeNum;
                  o.moleculeCount++;
                  moleculeCount = o.moleculeCount;
                  ew[sn] = o;
                }
              }
            }
          }
          if(!foundBond)
          {
            xBonds[i] = 0;
            yBonds[i] = 0;
          }
        }
        else
        {
          xBonds[i] =0;
          yBonds[i] = 0;
        }
      }
    }
    Unsigned(6) bondCount =0;
    for(Unsigned(6) k= 0; k<4; k++)
    {
      if(xBonds[k] != 0 || yBonds[k] != 0)
      {
        bondCount++;
      }
    }
    if(bondCount == 0)
    {
      bonded = false;
    }
  }


  Void isCarbon(EventWindow ew)
  {
    Random r;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          if(p.bondNum1 == 4 && p.myState == 0)
          {
            p.moleculeNum = 0;
            p.getMoleculeNumber(r);
            p.moleculeCount = 5;
            p.myState = 1;
            p.moleculeDir = 0;
            //set the other atoms in the carbon
            C2D coord = ew.getCoord(i);
            Int(16) xHolder = coord.x;
            Int(16) yHolder = coord.y;
            for(Unsigned(6) j=0; j<4; j++)
            {
              coord.x = (Int(16)) (coord.x + p.xBonds[j]);
              coord.y = (Int(16)) (coord.y + p.yBonds[j]);
              Unsigned(6) sn = ew.getSiteNumber(coord);
              Direction dZero = 0;
              Direction dOne = 1;
              Direction dNeg = -1;
              if(ew[sn] is Proton)
              {
                Proton pBonded = (Proton) ew[sn];
                if((p.xBonds[j] == dZero) && (p.yBonds[j] == dOne))
                {
                  pBonded.moleculeDir = 3;
                }
                else if((p.xBonds[j] == dZero) && (p.yBonds[j] == dNeg))
                {
                  pBonded.moleculeDir = 2;
                }
                else if((p.xBonds[j] == dOne) && (p.yBonds[j] == dZero))
                {
                  pBonded.moleculeDir = 4;
                }
                else
                {
                  pBonded.moleculeDir = 1;
                }
                pBonded.moleculeNum = p.moleculeNum;
                pBonded.moleculeCount = 5;
                pBonded.myState = 1;
                pBonded.setNonCenterCarbon(p.xBonds[j], p.yBonds[j]);
                ew[sn] = pBonded;
              }
              coord.x = xHolder;
              coord.y = yHolder;
            }
            ew[i] = p;
          }
        }
      }
    }
  }

  Void isOxygen(EventWindow ew)
  {
    Random r;

    for(Unsigned(6) i= 0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
           Bool check = isTopLeft(ew, i, moleculeNum);
        }
      }
    }
  }

  Bool isTopLeft(EventWindow ew, Unsigned(6) sn, Unsigned(12) moleNum )
  {
    Random r;
    Bool retVal = false;
    Unsigned(6) xSN = 60;
    Unsigned(6) ySN = 60;
    Unsigned(6) diagSN = 60;
    Bool xBool = false;
    Bool yBool = false;
    Bool diagBool = false;

    C2D coordOG = ew.getCoord(sn);
    C2D coordChecker = ew.getCoord(sn);

    coordChecker.x = (Int(16))(coordOG.x + 1);
    Unsigned(6) right = ew.getSiteNumber(coordChecker);
    if(ew.isLegal(right))
    {
      if(ew[right] is Proton)
      {
        Proton rightProton = (Proton) ew[right];
        if(rightProton.moleculeNum == moleNum)
        {
          xBool = true;
          xSN = right;
        }
      }
    }
    coordChecker.x = coordOG.x;
    coordChecker.y = (Int(16)) (coordOG.y + 1);
    Unsigned(6) down = ew.getSiteNumber(coordChecker);
    if(ew.isLegal(down))
    {
      if(ew[down] is Proton)
      {
        Proton downProton = (Proton) ew[down];
        if(downProton.moleculeNum == moleNum)
        {
          yBool = true;
          ySN = down;
        }
      }
    }
    coordChecker.x = (Int(16))(coordOG.x + 1);
    Unsigned(6) diag = ew.getSiteNumber(coordChecker);
    if(ew.isLegal(diag))
    {
      if(ew[diag] is Proton)
      {
        Proton diagProton = (Proton) ew[diag];
        if(diagProton.moleculeNum == moleNum)
        {
          diagBool = true;
          diagSN = diag;
        }
      }
    }
    if(xBool && yBool && diagBool)
    {
      Unsigned(12) newMolNum;
      if(ew[sn] is Proton)
      {
        Proton p = (Proton) ew[sn];
        p.moleculeNum = 0;
        p.getMoleculeNumber(r);
        newMolNum = p.moleculeNum;
        p.moleculeCount = 4;
        p.myState = 2;
        p.moleculeDir = 1;
        p.setOxygenBonds(p.moleculeDir);
        ew[sn] = p;
      }
      if(ew[xSN] is Proton)
      {
        Proton rightProton = (Proton) ew[xSN];
        rightProton.moleculeNum = newMolNum;
        rightProton.moleculeCount = 4;
        rightProton.myState = 2;
        rightProton.moleculeDir = 2;
        rightProton.setOxygenBonds(rightProton.moleculeDir);
        ew[xSN] = rightProton;
      }

      if(ew[ySN] is Proton)
      {
        Proton downProton = (Proton) ew[ySN];
        downProton.moleculeNum = newMolNum;
        downProton.moleculeCount = 4;
        downProton.myState = 2;
        downProton.moleculeDir = 3;
        downProton.setOxygenBonds(downProton.moleculeDir);
        ew[ySN] = downProton;
      }

      if(ew[diagSN] is Proton)
      {
        Proton diagProton = (Proton) ew[diagSN];
        diagProton.moleculeNum = newMolNum;
        diagProton.moleculeCount = 4;
        diagProton.myState = 2;
        diagProton.moleculeDir = 4;
        diagProton.setOxygenBonds(diagProton.moleculeDir);
        ew[diagSN] = diagProton;
      }


      retVal = true;

    }
    return retVal;
  }

  Void isNitrogen(EventWindow ew)
  {
    for(Unsigned(6) i =0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          Bool threeStraight = hasThreeStraight(ew, i, p.moleculeNum);
          if(threeStraight)
          {
            Unsigned(6) corner = getCornerOfL(ew, i, p.moleculeNum);
            if(corner != 60)
            {
              C2D coordCorner = ew.getCoord(corner);
              C2D coordCurrent = ew.getCoord(i);
              Int yDiff = coordCorner.y - coordCurrent.y;
              Int xDiff = coordCorner.x - coordCurrent.x;
              Unsigned(3) state = getNitrogenState(xDiff, yDiff);
              Unsigned(12) newMolNum = setStraightBonds(ew, i, state);
              if(newMolNum != 0)
              {
                setCornerBonds(ew, corner, yDiff, newMolNum, state);
                //partOfChain = true;
                return;
              }
            }
          }
        }
      }
    }
  }
  Unsigned(3) getNitrogenState(Int x, Int y)
  {
    Unsigned(3) state;
    if(x == 0 && y > 0)
    {
      state = 3;
    }
    else if(x == 0 && y < 0)
    {
      state = 4;
    }
    else if(x != 0 && y > 0)
    {
      state = 5;
    }
    else if(x != 0 && y < 0)
    {
      state = 6;
    }
    return state;
  }

  Bool hasThreeStraight(EventWindow ew, Unsigned(6) sn, Unsigned(12) moleNum)
  {
    Bool retVal = false;
    Proton beginProton;
    Proton midProton;
    Proton endProton;
    Unsigned(6) midSN;
    Unsigned(6) endSN;
    if(ew[sn] is Proton)
    {
      beginProton = (Proton) ew[sn];
      C2D coord = ew.getCoord(sn);
      coord.x += 1;
      if(ew.isLive(coord))
      {
        midSN = ew.getSiteNumber(coord);
        if(ew[midSN] is Proton)
        {
          midProton = (Proton) ew[midSN];
          if(midProton.moleculeNum == moleNum)
          {
            coord.x += 1;
            if(ew.isLive(coord))
            {
              endSN = ew.getSiteNumber(coord);
              if(ew[endSN] is Proton)
              {
                endProton = (Proton) ew[endSN];
                if(endProton.moleculeNum == moleculeNum)
                {
                  return true;
                }
              }
            }
          }
        }
      }
    }
    return false;
  }

  Unsigned(6) getCornerOfL(EventWindow ew, Unsigned(6) sn, Unsigned(12) moleNum)
  {
    Random rand;
    C2D coordOG = ew.getCoord(sn);
    C2D coordChecker = ew.getCoord(sn);
    Unsigned(6) corner = 60;
    for(Unsigned(3) i = 0; i<4; i++)
    {
      if(i==0)
      {
        coordChecker.y-=1;
      }
      else if(i ==1)
      {
        coordChecker.y-=1;
        coordChecker.x+=2;
      }
      else if(i == 2)
      {
        coordChecker.y+=1;
      }
      else
      {
        coordChecker.y+=1;
        coordChecker.x+=2;
      }

      if(ew.isLive(coordChecker) && ew.isLegal(coordChecker))
      {
        Unsigned(6) check = ew.getSiteNumber(coordChecker);
        if(ew[check] is Proton)
        {
          Proton p = (Proton) ew[check];
          if(p.moleculeNum == moleculeNum)
          {
            corner = check;
            return corner;
          }
        }
      }
      coordChecker.x = coordOG.x;
      coordChecker.y = coordOG.y;
    }
    return corner;
  }

  Unsigned(12) setStraightBonds(EventWindow ew, Unsigned(6) startSN, Unsigned(3) state)
  {
    Random rand;
    Unsigned(12) newMolNum =0;
    if(ew[startSN] is Proton)
    {
      Proton startProton = (Proton) ew[startSN];
      startProton.moleculeNum = 0;
      startProton.getMoleculeNumber(rand);
      newMolNum = startProton.moleculeNum;
      startProton.moleculeCount = 4;
      startProton.myState = state;
      startProton.moleculeDir = 1;
      startProton.xBonds[0] = 1;
      startProton.yBonds[0] = 0;

      startProton.clearRemainingBonds(1);
      ew[startSN] = startProton;

      C2D checker = ew.getCoord(startSN);
      checker.x+=1;
      Unsigned(6) midSN = ew.getSiteNumber(checker);
      if(ew[midSN] is Proton)
      {
        Proton midProton = (Proton) ew[midSN];
        midProton.moleculeNum = newMolNum;
        midProton.moleculeCount = 4;
        midProton.myState = state;
        midProton.moleculeDir = 2;
        midProton.xBonds[0] = -1;
        midProton.yBonds[0] = 0;
        midProton.xBonds[1] = 1;
        midProton.yBonds[1] = 0;
        midProton.clearRemainingBonds(2);
        ew[midSN] = midProton;

      }
      C2D endChecker = ew.getCoord(midSN);
      endChecker.x+=1;
      Unsigned(6) endSN = ew.getSiteNumber(endChecker);
      if(ew[endSN] is Proton)
      {
        Proton endProton = (Proton) ew[endSN];
        endProton.moleculeNum = newMolNum;
        endProton.moleculeCount = 4;
        endProton.myState = state;
        endProton.moleculeDir = 3;
        endProton.xBonds[0] = -1;
        endProton.yBonds[0] = 0;
        endProton.clearRemainingBonds(1);
        ew[endSN] = endProton;
      }

    }
    return newMolNum;
  }

  Void setCornerBonds(EventWindow ew, Unsigned(6) sn, Int y, Unsigned(12) newMolNum, Unsigned(3) state)
  {
    if(ew[sn] is Proton)
    {
      Proton cornerProton = (Proton) ew[sn];
      cornerProton.moleculeNum = newMolNum;
      cornerProton.moleculeCount = 4;
      cornerProton.myState = state;
      cornerProton.moleculeDir = 4;
      cornerProton.xBonds[0] =(Direction) 0;
      cornerProton.yBonds[0] = (Direction) ((-1)*y);
      cornerProton.clearRemainingBonds(1);
      ew[sn] = cornerProton;

      C2D coordCorner = ew.getCoord(sn);
      coordCorner.y+=(Int(16)) ((-1)*y);
      Unsigned(6) bondSN = ew.getSiteNumber(coordCorner);
      if(ew[bondSN] is Proton)
      {
        Proton bondProton = (Proton) ew[bondSN];
        bondProton.xBonds[1] = 0;
        bondProton.yBonds[1] = (Direction)y;
        ew[bondSN] = bondProton;

      }

    }
  }

  Void setNonCenterCarbon(Direction x, Direction y)
  {
    Direction neg = -1;
    xBonds[0] = (Direction) (neg*x);
    yBonds[0] = (Direction) (neg*y);
    for(Unsigned(6) i=1; i<4; i++)
    {
      xBonds[i] = 0;
      yBonds[i] = 0;
    }
  }

  Void setOxygenBonds(Unsigned(3) loc)
  {
    if(loc == 1)
    {
      xBonds[0] = 1;
      yBonds[0] = 0;

      xBonds[1] = 0;
      yBonds[1] = 1;
    }
    else if( loc == 2)
    {
      xBonds[0] = -1;
      yBonds[0] = 0;

      xBonds[1] = 0;
      yBonds[1] = 1;
    }
    else if(loc == 3)
    {
      xBonds[0] = 1;
      yBonds[0] = 0;

      xBonds[1] = 0;
      yBonds[1] = -1;
    }
    else if(loc == 4)
    {
      xBonds[0] = -1;
      yBonds[0] = 0;

      xBonds[1] = 0;
      yBonds[1] = -1;
    }

    xBonds[2] = 0;
    yBonds[2] = 0;

    xBonds[3] = 0;
    yBonds[3] = 0;
  }

  Void isHydrogen(EventWindow ew)
  {
    Random r;
    Unsigned count = 0;
    Bool check = false;
    for(Unsigned(6) i =0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          C2D coordChecker = ew.getCoord(i);
          count++;
          for(Unsigned(3) i= 0; i<3; i++)
          {
            coordChecker.x+=1;
            if(ew.isLegal(coordChecker) && ew.isLive(coordChecker))
            {
              Unsigned(6) sn = ew.getSiteNumber(coordChecker);
              if(ew[sn] is Proton)
              {
                Proton pCheck = (Proton) ew[sn];
                if(!(pCheck.moleculeNum == p.moleculeNum))
                {
                  break;
                }
                else
                {
                  count++;
                }
              }
            }
          }
          if(count == (Unsigned)4)
          {
            setFourInRow(ew, i, r);
            return;
          }
        }
      }
      count = 0;
    }
  }

  Void setFourInRow(EventWindow ew, Unsigned(6) sn, Random r)
  {
    Unsigned(12) newMolNum =0;
    if(ew[sn] is Proton)
    {
      Proton startProton = (Proton) ew[sn];
      startProton.moleculeNum = 0;
      startProton.getMoleculeNumber(r);
      newMolNum = startProton.moleculeNum;
      startProton.moleculeCount = 4;
      startProton.myState = 4;
      startProton.moleculeDir = 1;
      startProton.xBonds[0] = 1;
      startProton.yBonds[0] = 0;
      startProton.clearRemainingBonds(1);
      ew[sn] = startProton;

      C2D coordChecker = ew.getCoord(sn);
      for(Unsigned(3) i = 0; i<3; i++)
      {
        coordChecker.x+=1;
        Unsigned(6) nextSN = ew.getSiteNumber(coordChecker);
        if(ew[nextSN] is Proton)
        {
          Proton nextProton = (Proton) ew[nextSN];
          nextProton.moleculeNum = newMolNum;
          nextProton.moleculeCount = 4;
          nextProton.myState = 4;
          if(i == 2)
          {
            nextProton.xBonds[0] = -1;
            nextProton.yBonds[0] = 0;
            nextProton.clearRemainingBonds(1);
            nextProton.moleculeDir = 3;
          }
          else
          {
            nextProton.xBonds[0] = 1;
            nextProton.yBonds[0] = 0;
            nextProton.xBonds[1] = -1;
            nextProton.yBonds[1] = 0;
            nextProton.clearRemainingBonds(2);
            nextProton.moleculeDir = 2;
          }
        }
      }

    }
  }

}
