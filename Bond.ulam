quark Bond
{
  typedef Int(3) Direction;
  Direction xBonds[] = {0, 0, 0, 0};
  Direction yBonds[] = {0, 0, 0, 0};
  Bool bonded = false;
  Unsigned(3) myState = 0;

  Unsigned(3) getFreeBondIndex()
  {
    for(Unsigned(3) i =0; i<4; i++)
    {
      if(xBonds[i] == 0 && yBonds[i] == 0)
      {
        return i;
      }
    }
    return (Unsigned(3)) 4;
  }

  Bool alreadyBonded(Direction x, Direction y)
  {
    for(Unsigned(3) i =0; i<4; i++)
    {
      if(xBonds[i] == x && yBonds[i] == y)
      {
        return true;
      }
    }
    return false;
  }

  ARGB getColor(Unsigned selector)
  {
    ColorUtils cu;
    if (myState == 0 && bonded) return cu.color(0x9,0xff,0x9);
    else if(myState == 1) return cu.color(0x0, 0x0, 0xff);
    else return cu.color(0xff,0x0,0xff);
  }

}



element Proton : Bond
{
  Unsigned(3) bondNum1 = 7;
  Unsigned(12) moleculeNum = 0;
  Unsigned(6) moleculeCount=0;

  Unsigned(3) moleculeDir = 5;
  Bool set = false;
  Bool tryingToMoveMol = false;






  Void behave()
  {
    EventWindow ew;
    Random rand;
    Bool bondedThisStep = false;
    getMoleculeNumber(rand);
    getMoleculeCount(ew, rand);
    if(bonded)
    {
      checkBonds(ew);
    }
    setBonds(ew);
    getMoleculeCount(ew, rand);
    if(!bonded)
    {
      Unsigned(6) move = (Unsigned(6))rand.between(1,4);
      if(ew[move] is Empty)
      {
        ew.swap(0,move);
      }

    }
    else
    {
      isCarbon(ew);
      moveMolecule(ew, rand);
    }

  }

  Void getMoleculeCount(EventWindow ew, Random rand)
  {
    Unsigned(6) count =0;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton o = (Proton) ew[i];
        if(moleculeNum == o.moleculeNum)
        {
          count++;
        }
      }
    }
    moleculeCount = count;
    return;
  }

  Void getMoleculeNumber(Random rand)
  {
    if(moleculeNum == 0)
    {
      moleculeNum = (Unsigned(12))rand.between(1, 4000);
    }
  }

  Void setBonds(EventWindow ew)
  {
    if(myState > 0)
    {
      return;
    }
    for(Unsigned(6) d = 1; d <=4; d++)
    {
      bondNum1 = getFreeBondIndex();

      if(ew[d] is Proton )
      {
        Proton c = (Proton) ew[d];
        Unsigned(3) bondNum2 = c.getFreeBondIndex();
        C2D coord = ew.getCoord(d);
        Direction xDir = (Direction) coord.x;
        Direction yDir = (Direction) coord.y;
        Bool check = alreadyBonded(xDir, yDir);
        Direction negXDir = (Direction) (-1*xDir);
        Direction negYDir = (Direction) (-1*yDir);
        Bool otherCheck = c.alreadyBonded(negXDir, negYDir);
        if((bondNum1 < 4) && (bondNum2 < 4) && (!(check)) && (!(otherCheck)) && (myState ==0) && (c.myState == 0))
        {

          xBonds[bondNum1] = xDir;
          yBonds[bondNum1] = yDir;
          if(d == 1)
          {
            c.xBonds[bondNum2] = (Direction) 1;
            c.yBonds[bondNum2] = (Direction) 0;
          }
          else if (d == 2)
          {
            c.xBonds[bondNum2] = (Direction) 0;
            c.yBonds[bondNum2] = (Direction) 1;
          }
          else if (d == 3)
          {
            c.xBonds[bondNum2] = (Direction) 0;
            c.yBonds[bondNum2] = (Direction) -1;
          }
          else
          {
            c.xBonds[bondNum2] = (Direction) -1;
            c.yBonds[bondNum2] = (Direction) 0;
          }
          bonded = true;
          //bondedThisStep = true;
          c.bonded = true;
          if(moleculeCount >= c.moleculeCount || c.moleculeNum == 0)
          {
            c.moleculeNum = moleculeNum;
          }
          else
          {
            moleculeNum = c.moleculeNum;
          }
          ew[d] = c;
          c.getColor(0);
        }
      }
    }
  }



  Void moveMolecule(EventWindow ew, Random rand)
  {
    Int(5) xMove = -2;
    Int(5) yMove = -2;
    Unsigned(6) moveDir = (Unsigned(6)) rand.between(1,4);
    if(moveDir == 1)
    {
      xMove =-1;
      yMove = 0;
    }
    else if(moveDir == 2)
    {
      xMove =0;
      yMove = -1;
    }
    else if(moveDir == 3)
    {
      xMove =0;
      yMove = 1;
    }
    else if(moveDir == 4)
    {
      xMove = 1;
      yMove =0;
    }
    else
    {
      return;
    }
    Unsigned(6) neighbors [41];

    for(Unsigned(6) k=0; k<41; k++)
    {
      neighbors[k] = 60;
    }
    Unsigned(6) moleculeIndex =0;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton o = (Proton) ew[i];
        if(moleculeNum == o.moleculeNum)
        {
          neighbors[moleculeIndex] = i;
          C2D coord = ew.getCoord(i);
          coord.x += xMove;
          coord.y += yMove;
          Unsigned(6) siteNum = ew.getSiteNumber(coord);
          if(ew[siteNum] is Proton)
          {
            Proton pCheck = (Proton) ew[siteNum];
            if((pCheck.myState > 0) && (pCheck.moleculeNum != moleculeNum))
            {
              return;
            }
          }
          if(!(ew.isLegal(coord)) || !(ew.isLive(coord)))
          {
            return;
          }
          moleculeIndex++;
        }
      }
    }
    if(moveDir == 4)
    {
      Int(16) xCoords = 3;
      while(xCoords > -5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.x == xCoords)
            {
              coord.x += 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        xCoords--;
      }
    }
    else if(moveDir == 3)
    {
      Int(16) yCoords = 3;
      while(yCoords > -5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.y == yCoords)
            {
              coord.y += 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        yCoords--;
      }
    }
    else if(moveDir == 2)
    {
      Int(16) yCoords = -3;
      while(yCoords < 5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.y == yCoords)
            {
              coord.y -= 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        yCoords++;
      }
    }
    else if(moveDir == 1)
    {
      Int(16) xCoords = -3;
      while(xCoords < 5)
      {
        for(Unsigned(6) i =0; i<41; i++)
        {
          Unsigned(6) sn = neighbors[i];
          if(sn != 60)
          {
            C2D coord = ew.getCoord(sn);
            if(coord.x == xCoords)
            {
              coord.x -= 1;
              Unsigned(6) snMove = ew.getSiteNumber(coord);
              ew.swap(sn, snMove);
            }
          }
        }
        xCoords++;
      }
    }

  }




  Void checkBonds(EventWindow ew)
  {
    for(Unsigned(6) i=0; i<4; i++)
    {
      if(xBonds[i] != 0 || yBonds[i] != 0)
      {
        C2D coord = ew.getCoord(0);
        coord.x = xBonds[i];
        coord.y = yBonds[i];
        Unsigned(6) sn = ew.getSiteNumber(coord);
        if(ew[sn] is Proton)
        {
          Proton o = (Proton) ew[sn];
          Bool foundBond = false;
          for(Unsigned(6) j=0; j<4; j++)
          {
            Int(16) x = (o.xBonds[j])*(-1);
            Int(16) y = (o.yBonds[j])*(-1);
            if(xBonds[i] == x && yBonds[i] == y)
            {
              foundBond = true;
              if(o.moleculeNum != moleculeNum)
              {
                if(moleculeCount >= o.moleculeCount)
                {
                  o.moleculeNum = moleculeNum;
                  moleculeCount++;
                  o.moleculeCount = moleculeCount;
                  ew[sn] = o;
                }
                else
                {
                  moleculeNum = o.moleculeNum;
                  o.moleculeCount++;
                  moleculeCount = o.moleculeCount;
                  ew[sn] = o;
                }
              }
            }
          }
          if(!foundBond)
          {
            xBonds[i] = 0;
            yBonds[i] = 0;
          }
        }
        else
        {
          xBonds[i] =0;
          yBonds[i] = 0;
        }
      }
    }
    Unsigned(6) bondCount =0;
    for(Unsigned(6) k= 0; k<4; k++)
    {
      if(xBonds[k] != 0 || yBonds[k] != 0)
      {
        bondCount++;
      }
    }
    if(bondCount == 0)
    {
      bonded = false;
    }
  }


  Void isCarbon(EventWindow ew)
  {
    Random r;
    for(Unsigned(6) i=0; i<41; i++)
    {
      if(ew[i] is Proton)
      {
        Proton p = (Proton) ew[i];
        if(p.moleculeNum == moleculeNum)
        {
          if(p.bondNum1 == 4 && p.myState == 0)
          {
            p.moleculeNum = 0;
            p.getMoleculeNumber(r);
            p.moleculeCount = 5;
            p.myState = 1;
            p.moleculeDir = 0;
            //set the other atoms in the carbon
            C2D coord = ew.getCoord(i);
            Int(16) xHolder = coord.x;
            Int(16) yHolder = coord.y;
            for(Unsigned(6) j=0; j<4; j++)
            {
              coord.x = (Int(16)) (coord.x + p.xBonds[j]);
              coord.y = (Int(16)) (coord.y + p.yBonds[j]);
              Unsigned(6) sn = ew.getSiteNumber(coord);
              Direction dZero = 0;
              Direction dOne = 1;
              Direction dNeg = -1;
              if(ew[sn] is Proton)
              {
                Proton pBonded = (Proton) ew[sn];
                if((p.xBonds[j] == dZero) && (p.yBonds[j] == dOne))
                {
                  pBonded.moleculeDir = 3;
                }
                else if((p.xBonds[j] == dZero) && (p.yBonds[j] == dNeg))
                {
                  pBonded.moleculeDir = 2;
                }
                else if((p.xBonds[j] == dOne) && (p.yBonds[j] == dZero))
                {
                  pBonded.moleculeDir = 4;
                }
                else
                {
                  pBonded.moleculeDir = 1;
                }
                pBonded.moleculeNum = p.moleculeNum;
                pBonded.moleculeCount = 5;
                pBonded.myState = 1;
                pBonded.setNonCenterCarbon(p.xBonds[j], p.yBonds[j]);
                ew[sn] = pBonded;
              }
              coord.x = xHolder;
              coord.y = yHolder;
            }
            ew[i] = p;
          }
        }
      }
    }
  }

  Void setNonCenterCarbon(Direction x, Direction y)
  {
    Direction neg = -1;
    xBonds[0] = (Direction) (neg*x);
    yBonds[0] = (Direction) (neg*y);
    for(Unsigned(6) i=1; i<4; i++)
    {
      xBonds[i] = 0;
      yBonds[i] = 0;
    }
  }

}
